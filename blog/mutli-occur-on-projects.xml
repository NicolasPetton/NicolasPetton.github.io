<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:wfw="http://wellformedweb.org/CommentAPI/"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
     xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
     xmlns:georss="http://www.georss.org/georss"
     xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
     xmlns:media="http://search.yahoo.com/mrss/"><channel>
  <title>(Running multi-occur in many buffers)</title>
  <atom:link href="http://nicolas-petton.fr/blog/mutli-occur-on-projects.xml" rel="self" type="application/rss+xml" />
  <link>http://nicolas-petton.fr/blog/</link>
  <description><![CDATA[]]></description>
  <language>en</language>
  <pubDate>Thu, 15 Jan 2015 00:38:36 +0100</pubDate>
  <lastBuildDate>Thu, 15 Jan 2015 00:38:36 +0100</lastBuildDate>
  <generator>Emacs 24.4 Org-mode 8.2.10</generator>
  <webMaster>nicolas@petton.fr (Nicolas Petton)</webMaster>
  <image>
    <url>http://nicolas-petton.fr/images/nicolas-petton.png</url>
    <title>(Running multi-occur in many buffers)</title>
    <link>http://nicolas-petton.fr/blog/</link>
  </image>


  <item>
    <title>*Multi-occur* on projects</title>
    <link>http://nicolas-petton.fr/blog/multi-occur-on-projects.html</link>
    <author>Nicolas Petton</author>
    <guid isPermaLink="false">http://nicolas-petton.fr/blog/multi-occur-on-projects.html</guid>
    <pubDate>Fri, 05 Sep 2014 13:01:00 +0200</pubDate>

    <description><![CDATA[
    <p>
    <b>Update</b>: <a href="http://damiencassou.seasidehosting.st/">Damien Cassou</a> tricked me into extracting it in a
    package. You can get it here: <a href="https://github.com/NicolasPetton/noccur.el">github.com/NicolasPetton/noccur.el</a>.
    </p>

    <p>
    <a href="http://www.emacswiki.org/emacs/OccurMode">Occur-mode</a> is one of the awesome modes that come builtin with
    Emacs. 
    </p>

    <p>
    Sometimes I just want to run <code>multi-occur</code> on all (or a subdirectory)
    of a project I&rsquo;m working on. Used with keyboard macros it makes it a
    snap to perform modifications on many buffers at once.
    </p>

    <p>
    I wrote a tiny package containing the following functions that does just that:
    </p>


    <div class="org-src-container">

    <pre class="src src-emacs-lisp">(<span style="color: #f7af75; font-weight: bold;">require</span> '<span style="color: #da8548; font-weight: bold;">projectile</span>)

    (<span style="color: #f7af75; font-weight: bold;">defun</span> <span style="color: #cbaaf5;">noccur-dired</span> (regexp <span style="color: #92a65e; font-weight: bold;">&amp;optional</span> nlines)
    <span style="color: #70a56f;">"Perform `</span><span style="color: #da8548; font-weight: bold;">multi-occur</span><span style="color: #70a56f;">' with REGEXP in all dired marked files.</span>
    <span style="color: #70a56f;">When called with a prefix argument NLINES, display NLINES lines before and after."</span>
    (interactive (occur-read-primary-args))
    (multi-occur (mapcar #'find-file (dired-get-marked-files)) regexp nlines))

    (<span style="color: #f7af75; font-weight: bold;">defun</span> <span style="color: #cbaaf5;">noccur-project</span> (regexp <span style="color: #92a65e; font-weight: bold;">&amp;optional</span> nlines)
    <span style="color: #70a56f;">"Perform `</span><span style="color: #da8548; font-weight: bold;">multi-occur</span><span style="color: #70a56f;">' in the current project files."</span>
    (interactive (occur-read-primary-args))
    (<span style="color: #f7af75; font-weight: bold;">let*</span> ((directory (read-directory-name <span style="color: #789771;">"Search in directory: "</span>))
    (files (<span style="color: #f7af75; font-weight: bold;">if</span> (and directory (not (string= directory (projectile-project-root))))
    (projectile-files-in-project-directory directory)
    (projectile-current-project-files)))
    (buffers (mapcar #'find-file 
    (mapcar #'(<span style="color: #f7af75; font-weight: bold;">lambda</span> (file)
    (expand-file-name file (projectile-project-root)))
    files))))
    (multi-occur buffers regexp nlines)))

    (<span style="color: #f7af75; font-weight: bold;">provide</span> '<span style="color: #da8548; font-weight: bold;">noccur</span>)
    </pre>
    </div>

    <p>
    It requires projectile for the `noccur-project` function, but
    `noccur-dired` is very similar and doesn&rsquo;t require it.
    </p>

    <p>
    The way I use it is the following:
    </p>

    <p>
    <code>M-x noccur-project RET foo RET</code> then I can edit the occur buffer&rsquo;s
    content with <code>occur-edit-mode</code> (bound to <code>e</code>). To save changes in all
    modified buffer and go back to <code>occur-mode</code> press <code>C-c C-c</code>.
    </p>


    <div id="disqus_thread"></div>
    <script type="text/javascript">
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'nicolas-petton'; // required: replace example with your forum shortname

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
    <a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
    ]]></description>
</item>
</channel>
</rss>
